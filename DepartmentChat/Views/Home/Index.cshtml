@model ChatsUserViewModel
@{
    ViewBag.Title = "Chats";
}

<!-- Layout -->
<div class="layout overflow-hidden">

    <!-- Navigation -->
    <partial name="MainViewPartial/_NavBarPartial" model="Model.UserView"/>
    <!-- Navigation -->
    <!-- Sidebar -->
    <partial name="MainViewPartial/_SidebarPartial" model="Model"/>
    <!-- Sidebar -->

<div id="loader-chat" class="ml-loader">
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                            </div>
    @if (Model.ViewModel != null)
    {
        
            <partial name="MainViewPartial/_ChatPartial" model="Model"/>
            }
            else
            {
            <main class="main">
                <div class="container h-100">

                    <div class="d-flex flex-column h-100 justify-content-center text-center">
                        <div class="mb-6">
                            <span class="icon icon-xl text-muted">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-message-square">
                                    <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
                                </svg>
                            </span>
                        </div>

                        <p class="text-muted">Выберите чат из левого бокового меню.</p>
                    </div>

                </div>
            </main>
            }
        </div>

<!-- Modal: Profile -->
<div class="modal fade" id="modal-profile" tabindex="-1" aria-labelledby="modal-profile" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-fullscreen-xl-down">
        <div class="modal-content">

            <!-- Modal body -->
            <div class="modal-body py-0">
                <!-- Header -->
                <div class="profile modal-gx-n">
                    <div class="profile-img text-primary rounded-top-xl">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 400 140.74">
                            <defs>
                                <style>.cls-2{fill:#fff;opacity:0.1;}</style>
                            </defs>
                            <g>
                                <g>
                                    <path d="M400,125A1278.49,1278.49,0,0,1,0,125V0H400Z"/><path class="cls-2" d="M361.13,128c.07.83.15,1.65.27,2.46h0Q380.73,128,400,125V87l-1,0a38,38,0,0,0-38,38c0,.86,0,1.71.09,2.55C361.11,127.72,361.12,127.88,361.13,128Z"/><path class="cls-2" d="M12.14,119.53c.07.79.15,1.57.26,2.34v0c.13.84.28,1.66.46,2.48l.07.3c.18.8.39,1.59.62,2.37h0q33.09,4.88,66.36,8,.58-1,1.09-2l.09-.18a36.35,36.35,0,0,0,1.81-4.24l.08-.24q.33-.94.6-1.9l.12-.41a36.26,36.26,0,0,0,.91-4.42c0-.19,0-.37.07-.56q.11-.86.18-1.73c0-.21,0-.42,0-.63,0-.75.08-1.51.08-2.28a36.5,36.5,0,0,0-73,0c0,.83,0,1.64.09,2.45C12.1,119.15,12.12,119.34,12.14,119.53Z"/><circle class="cls-2" cx="94.5" cy="57.5" r="22.5"/><path class="cls-2" d="M276,0a43,43,0,0,0,43,43A43,43,0,0,0,362,0Z"/>
                                </g>
                            </g>
                        </svg>

                        <div class="position-absolute top-0 start-0 py-6 px-5">
                            <button type="button" class="btn-close btn-close-white btn-close-arrow opacity-100" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                    </div>

                    <div class="profile-body">
                        <div class="avatar avatar-xl">
                            @if (Model.UserView.Icon is null)
                            {
                                <span class="avatar-text">@(Model.UserView.Email.First())</span>
                            }
                            else
                            {
                                <img class="avatar-img" src="data:image/png;base64,@System.Convert.ToBase64String(Model.UserView.Icon)" alt="">
                            }
                        </div>

                        <h4 class="mb-1">@Model.UserView.Email</h4>
                        @* <p>status user online</p> *@
                    </div>
                </div>
                <!-- Header -->

                <hr class="hr-bold modal-gx-n my-0">

                <!-- List -->
                <ul class="list-group list-group-flush">

                    <li class="list-group-item">
                        <div class="row align-items-center gx-6">
                            <div class="col">
                                <h5>E-mail</h5>
                                @* <p>example@gmail.com</p> *@
                            </div>

                            <div class="col-auto">
                                <div class="btn btn-sm btn-icon btn-dark">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-mail">
                                        <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path><polyline points="22,6 12,13 2,6"></polyline>
                                    </svg>
                                </div>
                            </div>
                        </div>
                    </li>

                    <li class="list-group-item">
                        <div class="row align-items-center gx-6">
                            <div class="col">
                                <h5>Phone</h5>
                                @* <p>example phone</p> *@
                            </div>

                            <div class="col-auto">
                                <div class="btn btn-sm btn-icon btn-dark">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-phone-call">
                                        <path d="M15.05 5A5 5 0 0 1 19 8.95M15.05 1A9 9 0 0 1 23 8.94m-1 7.98v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>
                                    </svg>
                                </div>
                            </div>
                        </div>
                    </li>
                </ul>
                <!-- List  -->

                <hr class="hr-bold modal-gx-n my-0">

                @* <!-- List --> *@
                @* <ul class="list-group list-group-flush"> *@
                @*     <li class="list-group-item"> *@
                @*         <div class="row align-items-center gx-6"> *@
                @*             <div class="col"> *@
                @*                 <h5>Active status</h5> *@
                @*                 <p>Show when you're active.</p> *@
                @*             </div> *@
                @* *@
                @*             <div class="col-auto"> *@
                @*                 <div class="form-check form-switch"> *@
                @*                     <input class="form-check-input" type="checkbox" id="profile-status" checked> *@
                @*                     <label class="form-check-label" for="profile-status"></label> *@
                @*                 </div> *@
                @*             </div> *@
                @*         </div> *@
                @*     </li> *@
                @* </ul> *@
                @* <!-- List --> *@

                <hr class="hr-bold modal-gx-n my-0">

                <!-- List -->
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">
                        <a asp-area="Identity" asp-page="/Account/Logout" class="text-danger">Logout</a>
                    </li>
                </ul>
                <!-- List -->
            </div>
            <!-- Modal body -->

        </div>
    </div>
</div>

<script src="~/js/signalr/dist/browser/signalr.min.js"></script>
<script>    
          const hubConnection = new signalR.HubConnectionBuilder()
              .withUrl("/mainhubchats")
              .withAutomaticReconnect()
              .configureLogging(signalR.LogLevel.Information)
              .build();
            
          hubConnection.on("ReceiveMessage", function (roomName, UserSend, userName, iconBlock, message, date) {
              const messageOut = `<div class="message message-out">
                                  <a href="#" data-bs-toggle="modal" data-bs-target="#modal-profile" class="avatar avatar-responsive">
 ${iconBlock}                               
</a>
      
                                  <div class="message-inner">
                                      <div class="message-body">
                                          <div class="message-content">
                                              <div class="message-text">
                                                  <p style="word-break: break-word; white-space: break-spaces;">${message}</p >
                                              </div>
                                          </div>
                                      </div>
      
                                      <div class="message-footer">
                                          <span class="extra-small text-muted">${date}</span>
                                      </div>
                                  </div>
                              </div>`;
              // const messageDevider = `<div class="message-divider">
              //                         <small class="text-muted">Monday, Sep 16</small>
              //                     </div>`;
      
              const messageIn = `<div class="message">
                              <a href="#" data-bs-toggle="modal" data-bs-target="#modal-user-profile" class="avatar avatar-responsive">
                                  ${iconBlock}
                              </a>
      
                              <div class="message-inner">
                                  <div class="message-body">
                                      <div class="message-content">
                                          <div class="message-text">
                                              <p style="word-break: break-word; white-space: break-spaces;">${message}</p>
                                          </div>
                                      </div>
                                  </div>
      
                                  <div class="message-footer">
                                      <span class="extra-small text-muted">${date}</span>
                                  </div>
                              </div>
                          </div>`;
              
              
              var elem = document.getElementById("chatempty");
              if (elem !== null){
                elem.parentNode.removeChild(elem);
              }
              
              
              if (`@Model.UserView.Id` === UserSend) {
                  document.getElementById("chatroom" + roomName).insertAdjacentHTML('beforeend', messageOut);
                  updateSidebarChats();
                  // document.getElementById("chatmessage-" + roomName).innerHTML = `Вы: ${message}`;
                      }
              else {
                  document.getElementById("chatroom" + roomName).insertAdjacentHTML('beforeend', messageIn);
                  updateSidebarChats();
                  // document.getElementById("chatmessage-" + roomName).innerHTML = `${userName}: ${message}`;
                  }
      scrollToLowerChat();
          });
          function SendMessage(room, user) {
              const message = document.getElementById("messageInput").value;
              if (message.trim() === "")
                  return;
              hubConnection.invoke("SendMessage", user, message.trim(), room, true);
              document.getElementById("messageInput").value = '';
              document.getElementById("messageInput").focus();
          }
      
      
          // document.getElementById("joinButton").addEventListener("click", function () {
          //     console.log("Join")
          //     const room = document.getElementById("room").value;
          //     const user = document.getElementById("userInput").value;
          //     const message = document.getElementById("messageInput").value;
          //     hubConnection.invoke("SendMessage", user, message, room, false);
          // });
      
      hubConnection.start();
           
      </script>